/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.6.3/samples
 */


plugins {
    id 'java'
    id 'application'
}

application {
    mainClass = 'express.Express'
}

repositories {
    mavenLocal()
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    // https://mvnrepository.com/artifact/fr.inria.gforge.spoon/spoon-core
    implementation 'fr.inria.gforge.spoon:spoon-core:11.0.0'

    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    // Junit 4
    implementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testRuntimeOnly group: 'junit', name: 'junit', version: '4.13.2'

    // Logger
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.7'

    // Junit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Object Collector
    implementation group: 'collector', name: 'collector', version: '1.0', ext: 'jar'
}

/*tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}*/

run {
    enableAssertions = true
}

test {
    useJUnitPlatform {
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}

jar {
    archiveBaseName = 'express'
    archiveVersion = '1.0'

    // Add runtime classpath dependencies to the JAR (fat JAR)
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    // Include compiled class files and resources
    from {
        // Access compiled Java classes and processed resources without using `get()`
        tasks.compileJava.destinationDirectory
        tasks.processResources.destinationDir
    }

    // Exclude source code files and signature files from the JAR
    exclude '**/*.java'
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'

    manifest {
        attributes(
            'Main-Class': 'express.Express'
        )
    }

    // Handle duplicate entries by selecting a strategy
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
